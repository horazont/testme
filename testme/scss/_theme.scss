$colours: (
  "gray": [
    hsl(0, 0%, 10%),
    hsl(0, 0%, 20%),
    hsl(0, 0%, 30%),
    hsl(0, 0%, 40%),
    hsl(0, 0%, 50%),
    hsl(0, 0%, 60%),
    hsl(0, 0%, 70%),
    hsl(0, 0%, 80%),
    hsl(0, 0%, 90%)
  ],
  "primary": [
    hsl(0, 80%, 10%),
    hsl(0, 80%, 20%),
    hsl(0, 80%, 30%),
    hsl(0, 80%, 40%),
    hsl(0, 80%, 50%),
    hsl(0, 80%, 60%),
    hsl(0, 80%, 70%),
    hsl(0, 80%, 80%),
    hsl(0, 80%, 90%)
  ],
  "alert": [
    hsl(0, 80%, 10%),
    hsl(0, 80%, 20%),
    hsl(0, 80%, 30%),
    hsl(0, 80%, 40%),
    hsl(0, 80%, 50%),
    hsl(0, 80%, 60%),
    hsl(0, 80%, 70%),
    hsl(0, 80%, 80%),
    hsl(0, 80%, 90%)
  ],
  "accent": [
    hsl(150, 80%, 10%),
    hsl(150, 80%, 20%),
    hsl(150, 80%, 30%),
    hsl(150, 80%, 40%),
    hsl(150, 80%, 50%),
    hsl(150, 80%, 60%),
    hsl(150, 80%, 70%),
    hsl(150, 80%, 80%),
    hsl(150, 80%, 90%)
  ],
  "success": [
    hsl(100, 80%, 10%),
    hsl(100, 80%, 20%),
    hsl(100, 80%, 30%),
    hsl(100, 80%, 40%),
    hsl(100, 80%, 50%),
    hsl(100, 80%, 60%),
    hsl(100, 80%, 70%),
    hsl(100, 80%, 80%),
    hsl(100, 80%, 90%)
  ]
);

$gray-100: nth(map-get($colours, "gray"), 1);
$gray-200: nth(map-get($colours, "gray"), 2);
$gray-300: nth(map-get($colours, "gray"), 3);
$gray-400: nth(map-get($colours, "gray"), 4);
$gray-500: nth(map-get($colours, "gray"), 5);
$gray-600: nth(map-get($colours, "gray"), 6);
$gray-700: nth(map-get($colours, "gray"), 7);
$gray-800: nth(map-get($colours, "gray"), 8);
$gray-900: nth(map-get($colours, "gray"), 9);

$primary-100: nth(map-get($colours, "primary"), 1);
$primary-200: nth(map-get($colours, "primary"), 2);
$primary-300: nth(map-get($colours, "primary"), 3);
$primary-400: nth(map-get($colours, "primary"), 4);
$primary-500: nth(map-get($colours, "primary"), 5);
$primary-600: nth(map-get($colours, "primary"), 6);
$primary-700: nth(map-get($colours, "primary"), 7);
$primary-800: nth(map-get($colours, "primary"), 8);
$primary-900: nth(map-get($colours, "primary"), 9);

$alert-100: nth(map-get($colours, "alert"), 1);
$alert-200: nth(map-get($colours, "alert"), 2);
$alert-300: nth(map-get($colours, "alert"), 3);
$alert-400: nth(map-get($colours, "alert"), 4);
$alert-500: nth(map-get($colours, "alert"), 5);
$alert-600: nth(map-get($colours, "alert"), 6);
$alert-700: nth(map-get($colours, "alert"), 7);
$alert-800: nth(map-get($colours, "alert"), 8);
$alert-900: nth(map-get($colours, "alert"), 9);

$accent-100: nth(map-get($colours, "accent"), 1);
$accent-200: nth(map-get($colours, "accent"), 2);
$accent-300: nth(map-get($colours, "accent"), 3);
$accent-400: nth(map-get($colours, "accent"), 4);
$accent-500: nth(map-get($colours, "accent"), 5);
$accent-600: nth(map-get($colours, "accent"), 6);
$accent-700: nth(map-get($colours, "accent"), 7);
$accent-800: nth(map-get($colours, "accent"), 8);
$accent-900: nth(map-get($colours, "accent"), 9);

$success-100: nth(map-get($colours, "success"), 1);
$success-200: nth(map-get($colours, "success"), 2);
$success-300: nth(map-get($colours, "success"), 3);
$success-400: nth(map-get($colours, "success"), 4);
$success-500: nth(map-get($colours, "success"), 5);
$success-600: nth(map-get($colours, "success"), 6);
$success-700: nth(map-get($colours, "success"), 7);
$success-800: nth(map-get($colours, "success"), 8);
$success-900: nth(map-get($colours, "success"), 9);

$w-s5: 0.0625rem;
$w-s4: 0.125rem;
$w-s3: 0.25rem;
$w-s2: 0.5rem;
$w-s1: 0.75rem;
$w-0: 1rem;
$w-l1: 1.5rem;
$w-l2: 2rem;
$w-l3: 3rem;
$w-l4: 4rem;
$w-l5: 6rem;
$w-l6: 8rem;
$w-l7: 12rem;

$font-sans: "Noto Sans", sans-serif;
$font-serif: serif;
$font-monospace: monospace;

$font-heading: $font-sans;
$font-bulk: $font-sans;
$font-code: $font-monospace;

/**
 * On the scaling of the headers. I’m a nerd, so here we go.
 *
 * I tried to determine a good scale a priori. It was clear to me that the
 * observed difference between a 48px and 64px font is much smaller than the
 * perceived difference between a 8px and 16px font size.
 *
 * Thus, the perception is *not* linear in the font size.
 *
 * I set the edge points to 200% and 100% (the h6 would get a bold font face)
 * to compensate.
 *
 * The first attempt to get a visually appealing header size scale was thus to
 * generate a logarithmic scale:
 *
 *     numpy.logspace(np.log10(200), 2, 6, base=10)
 *
 * This leads to the following sizes:
 *
 *     $_h-sizes: [200%, 174.11011266%, 151.57165665%, 131.95079108%, 114.8698355%, 100%];
 *
 * This scale has too large differences between the larger font sizes, and too
 * small differences between the smaller font sizes. Thus, I tried to invert
 * this:
 *
 *     200 - numpy.logspace(2, np.log10(200), 6, base=10) + 100
 *
 * This leads to the following sizes:
 *
 *     $_h-sizes: [200.0%, 185.13016450029647%, 168.0492089227105%, 148.42834334896025%, 125.88988734077518%, 100%];
 *
 * While this was better, it still didn’t look quite right yet. The next
 * attempt was to go about a square function instead of log. The idea behind
 * this is that the font size is essentially one edge of a rectangle, where the
 * second edge depends on the first. A square function should thus generate a
 * nicely appealing sequence:
 *
 * Again, we want the large differences to be on the large scales, too:
 *
 *     xs = numpy.linspace(5, 0, 6); 4*xs*xs + 100
 *
 * This leads to the following sizes:
 *
 *     $_h-sizes: [200.0%, 164.0%, 136.0%, 116.0%, 104.0%, 100.0%];
 *
 * While the first three headings looked nice with that, the others did not.
 * Further research has shown me that others use an exponential scale (instead
 * of a log scale), but with a rather small base (<1.6).
 *
 * Instead of taking one of the well-known factors (like golden ratio or major
 * second), I opted for choosing a factor which gives me a clean 200%-100%
 * range:
 *
 *     numpy.power(math.pow(2, 1/5), numpy.linspace(5, 0, 6)) * 100
 *
 * The result (rounded to 8 digits) is:
 *
 *     $_h-sizes: [200.0%, 174.11011266%, 151.57165665%, 131.95079108%, 114.8698355%, 100.0%];
 *
 * And... This is the first logspace range. Derp. So why did I discard it in
 * the first place? Now that I look at it, it looks amazing. Brains are weird.
 */
$h-sizes: [200.0%, 174.11011266%, 151.57165665%, 131.95079108%, 114.8698355%, 100.0%];

/**
 * And for mobile devices, we want an even less aggressive scale. Let’s try
 * 150%-100%.
 */
$h-small-sizes: [150.0%, 138.31618672%, 127.54245006%, 117.60790225%, 108.44717712%, 100.0%];
$small-screen-threshold: 40rem;
